 #include <cuda_runtime.h>
#include "cublas_v2.h"
 
  // double error = 0.0;
    // double *d_A, *d_Anew, *d_error;
    // double *h_C = new double[m * m];
    // cudaMalloc(&d_A, m * n * sizeof(double));
    // cudaMalloc(&d_Anew, m * n * sizeof(double));
    // cudaMalloc(&d_error, m * n * sizeof(double));
    // cudaMemcpy(d_A, A, m * n * sizeof(double), cudaMemcpyHostToDevice);
    // cudaMemcpy(d_Anew, Anew, m * n * sizeof(double), cudaMemcpyHostToDevice);
    // cublasHandle_t handle;
    // cublasCreate(&handle);
    // const double alpha = -1.0;
    // const double beta = 1.0;
    // cublasDgeam(handle, CUBLAS_OP_N, CUBLAS_OP_N, m, n, &alpha, d_Anew, m, &beta, d_A, m, d_error, m);
    // cublasDasum(handle, m * n, d_error, 1, &error);
    // cublasDestroy(handle);
    // cudaFree(d_A);
    // cudaFree(d_Anew);
    // cudaFree(d_error);
    // return error;